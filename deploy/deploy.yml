- name: Deploy Application to VM2
  hosts: vm2
  become: yes
  become_method: sudo
  tasks:

    # 0. Ensure required dependencies are present
    - name: Install prerequisite packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3
        state: present
        update_cache: yes

    # 1. Add Docker's official GPG key
    - name: Add Dockerâ€™s official GPG key
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    # 2. Set up Docker repository
    - name: Add Docker repository
      copy:
        dest: /etc/apt/sources.list.d/docker.list
        content: |
          deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

    # 3. Install Docker and Compose v2 plugin
    - name: Install Docker CE and Compose plugin
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: yes

    # 4. Ensure Docker service is running
    - name: Start and enable Docker
      service:
        name: docker
        state: started
        enabled: yes

    # 7. Copy docker-compose.yml to VM2
    - name: Copy docker-compose.yml to VM2
      copy:
        src: /var/lib/jenkins/workspace/pfa-deploy/projetPfa/docker-compose.yml
        dest: /home/aymen/projects/dreamsport/docker-compose.yml
        owner: aymen
        group: aymen
        mode: '0644'

    # 8. Copy wait-for-it.sh script to VM2
    - name: Copy wait-for-it.sh script to VM2
      copy:
        src: /var/lib/jenkins/workspace/pfa-deploy/projetPfa/gestionSite/wait-for-it.sh
        dest: /home/aymen/projects/dreamsport/gestionSite/wait-for-it.sh
        owner: aymen
        group: aymen
        mode: '0755'

    # 9. Pull Docker images defined in the Docker Compose file
    - name: Pull all Docker images in the Docker Compose file
      shell: docker compose -f /home/aymen/projects/dreamsport/docker-compose.yml pull
      args:
        chdir: /home/aymen/projects/dreamsport

    # 10. Stop and remove existing Docker Compose containers
    - name: Stop and remove existing Docker Compose containers
      docker_compose:
        project_src: /home/aymen/projects/dreamsport
        state: absent

    # 11. Start Docker containers using Compose
    - name: Start Docker containers
      docker_compose:
        project_src: /home/aymen/projects/dreamsport
        state: present
        restarted: yes
      register: compose_output
      no_log: false

    # 12. Wait for SQL Server to be ready
    - name: Wait for SQL Server to be ready
      wait_for:
        host: "localhost"
        port: 1433
        timeout: 120   # Increased timeout to wait longer for readiness
        delay: 10      # Delay between retries to give the service time to initialize
        state: started

    # 13. Wait for RabbitMQ to be ready
    - name: Wait for RabbitMQ to be ready
      wait_for:
        host: "localhost"
        port: 5672
        timeout: 120   # Increased timeout to wait longer for readiness
        delay: 10      # Delay between retries to give the service time to initialize
        state: started

    - name: Print docker compose output
      debug:
        var: compose_output

    # 14. Install Nginx
    - name: Install Nginx
      apt:
        name: nginx
        state: present
        update_cache: yes

    # 15. Copy Angular build files to Nginx serving directory
    - name: Copy Angular build files to VM2
      copy:
        src: /var/lib/jenkins/workspace/pfa-deploy/projetPfa/angular/dist/dreams-sports
        dest: /var/www/html
        owner: www-data
        group: www-data
        mode: '0755'

    # 16. Configure Nginx to serve frontend
    - name: Configure Nginx to serve frontend
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/default

    # 17. Restart Nginx to apply changes
    - name: Restart Nginx to apply changes
      service:
        name: nginx
        state: restarted
        enabled: yes
